# Script to build and install the backport library

# Download the source code from GitHub See vcpkg documentation: "vcpkg_from_github: Starts the function to download the source code from a GitHub repository."
vcpkg_from_github(
  OUT_SOURCE_PATH
  SOURCE_PATH # Sets the directory where the source code will be extracted
  REPO
  jkammerland/backport # [github]
  REF
  "v${VERSION}" # The version tag (e.g., v1.0.4) - ${VERSION} is filled from vcpkg.json
  SHA512
  16c177045a7becf91f648ea2e9afec868ebd1d5b60ce8f5b6a624ae24141c4c6943bb361094beb978f50fc42ab890f0d5272078a3152d9f374423e8dc92b8de0
  HEAD_REF
  master # Branch to use for HEAD builds
)

# Configure the CMake build We need to ensure it uses the vcpkg-provided tl-expected and doesn't try to use CPM for it. Your CMakeLists.txt has: option(backport_USE_SYSTEM_EXPECTED "Use system
# expected" OFF) We set this to ON.
vcpkg_cmake_configure(
  SOURCE_PATH
  "${SOURCE_PATH}"
  OPTIONS
  -Dbackport_USE_SYSTEM_EXPECTED=ON # Use find_package(tl-expected)
  -Dbackport_BUILD_TESTS=OFF # Do not build tests when installing the package
  -Dbackport_INSTALL=ON # Ensure CMake install rules are processed (for target_install_package)
  -DFETCHCONTENT_FULLY_DISCONNECTED=OFF
  -DARG_CMAKE_CONFIG_DESTINATION="share/cmake/backport"
  MAYBE_UNUSED_VARIABLES # CPM_PATH might be unused if system expected is on
  CPM_PATH # The get_cpm.cmake might define this, so declare it
)

# Install the package using CMake install rules Your CMakeLists.txt uses target_install_package(${PROJECT_NAME}), which should set up install rules.
vcpkg_cmake_install()

# Fix up CMake package configuration files generated by target_install_package This makes them relocatable and usable by vcpkg consumers. The PACKAGE_NAME should be "backport" as per project(backport)
# in your CMakeLists.txt. The CONFIG_PATH is typically "lib/cmake/${PACKAGE_NAME}" or "share/${PACKAGE_NAME}/cmake". You may need to inspect where target_install_package places the files and adjust.
vcpkg_cmake_config_fixup(PACKAGE_NAME backport CONFIG_PATH "share/cmake/backport")

# ~~~
# Remove unnecessary directories for an interface library
# file(REMOVE_RECURSE "${CURRENT_PACKAGES_DIR}/debug")
# file(REMOVE_RECURSE "${CURRENT_PACKAGES_DIR}/lib/debug")
# file(REMOVE_RECURSE "${CURRENT_PACKAGES_DIR}/lib32/debug")
# file(REMOVE_RECURSE "${CURRENT_PACKAGES_DIR}/lib64/debug")
# ~~~

if(EXISTS "${SOURCE_PATH}/LICENSE")
  file(
    INSTALL "${SOURCE_PATH}/LICENSE"
    DESTINATION "${CURRENT_PACKAGES_DIR}/share/${PORT}"
    RENAME copyright)
else()
  message(FATAL_ERROR "LICENSE file not found at ${SOURCE_PATH}/LICENSE. Please add one.")
endif()
